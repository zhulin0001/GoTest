// Code generated by protoc-gen-go.
// source: cmd.proto
// DO NOT EDIT!

/*
Package network_cmd is a generated protocol buffer package.

It is generated from these files:
	cmd.proto

It has these top-level messages:
*/
package network_cmd

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type PBMainCmd int32

const (
	PBMainCmd_MCmd_HeartBeat PBMainCmd = 0
	PBMainCmd_MCmd_Account   PBMainCmd = 1
)

var PBMainCmd_name = map[int32]string{
	0: "MCmd_HeartBeat",
	1: "MCmd_Account",
}
var PBMainCmd_value = map[string]int32{
	"MCmd_HeartBeat": 0,
	"MCmd_Account":   1,
}

func (x PBMainCmd) Enum() *PBMainCmd {
	p := new(PBMainCmd)
	*p = x
	return p
}
func (x PBMainCmd) String() string {
	return proto.EnumName(PBMainCmd_name, int32(x))
}
func (x *PBMainCmd) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(PBMainCmd_value, data, "PBMainCmd")
	if err != nil {
		return err
	}
	*x = PBMainCmd(value)
	return nil
}
func (PBMainCmd) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type PBMainCmdHearBeatSubCmd int32

const (
	PBMainCmdHearBeatSubCmd_HB_Send     PBMainCmdHearBeatSubCmd = 1
	PBMainCmdHearBeatSubCmd_HB_Response PBMainCmdHearBeatSubCmd = 2
)

var PBMainCmdHearBeatSubCmd_name = map[int32]string{
	1: "HB_Send",
	2: "HB_Response",
}
var PBMainCmdHearBeatSubCmd_value = map[string]int32{
	"HB_Send":     1,
	"HB_Response": 2,
}

func (x PBMainCmdHearBeatSubCmd) Enum() *PBMainCmdHearBeatSubCmd {
	p := new(PBMainCmdHearBeatSubCmd)
	*p = x
	return p
}
func (x PBMainCmdHearBeatSubCmd) String() string {
	return proto.EnumName(PBMainCmdHearBeatSubCmd_name, int32(x))
}
func (x *PBMainCmdHearBeatSubCmd) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(PBMainCmdHearBeatSubCmd_value, data, "PBMainCmdHearBeatSubCmd")
	if err != nil {
		return err
	}
	*x = PBMainCmdHearBeatSubCmd(value)
	return nil
}
func (PBMainCmdHearBeatSubCmd) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type PBMainCmdAccountSubCmd int32

const (
	PBMainCmdAccountSubCmd_Account_ReqLogin    PBMainCmdAccountSubCmd = 1
	PBMainCmdAccountSubCmd_Account_RespLogin   PBMainCmdAccountSubCmd = 2
	PBMainCmdAccountSubCmd_Account_ReqInfoExt  PBMainCmdAccountSubCmd = 3
	PBMainCmdAccountSubCmd_Account_RespInfoExt PBMainCmdAccountSubCmd = 4
)

var PBMainCmdAccountSubCmd_name = map[int32]string{
	1: "Account_ReqLogin",
	2: "Account_RespLogin",
	3: "Account_ReqInfoExt",
	4: "Account_RespInfoExt",
}
var PBMainCmdAccountSubCmd_value = map[string]int32{
	"Account_ReqLogin":    1,
	"Account_RespLogin":   2,
	"Account_ReqInfoExt":  3,
	"Account_RespInfoExt": 4,
}

func (x PBMainCmdAccountSubCmd) Enum() *PBMainCmdAccountSubCmd {
	p := new(PBMainCmdAccountSubCmd)
	*p = x
	return p
}
func (x PBMainCmdAccountSubCmd) String() string {
	return proto.EnumName(PBMainCmdAccountSubCmd_name, int32(x))
}
func (x *PBMainCmdAccountSubCmd) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(PBMainCmdAccountSubCmd_value, data, "PBMainCmdAccountSubCmd")
	if err != nil {
		return err
	}
	*x = PBMainCmdAccountSubCmd(value)
	return nil
}
func (PBMainCmdAccountSubCmd) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func init() {
	proto.RegisterEnum("network.cmd.PBMainCmd", PBMainCmd_name, PBMainCmd_value)
	proto.RegisterEnum("network.cmd.PBMainCmdHearBeatSubCmd", PBMainCmdHearBeatSubCmd_name, PBMainCmdHearBeatSubCmd_value)
	proto.RegisterEnum("network.cmd.PBMainCmdAccountSubCmd", PBMainCmdAccountSubCmd_name, PBMainCmdAccountSubCmd_value)
}

func init() { proto.RegisterFile("cmd.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 197 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x4c, 0x8c, 0xd1, 0x6a, 0x83, 0x30,
	0x14, 0x86, 0xa7, 0x1b, 0x0c, 0x8f, 0x63, 0x3b, 0x3b, 0xdb, 0xf4, 0x1d, 0xbc, 0x10, 0x76, 0xb5,
	0xeb, 0x45, 0x06, 0x0e, 0x26, 0x0c, 0x7d, 0x80, 0x60, 0x93, 0xb4, 0x48, 0x49, 0x62, 0x35, 0xb6,
	0x7d, 0xfc, 0x62, 0x6b, 0xad, 0xb7, 0xdf, 0xff, 0x7d, 0x3f, 0x04, 0x42, 0xcb, 0xb4, 0xed, 0xac,
	0xb3, 0x14, 0x1a, 0xe5, 0x0e, 0xb6, 0xdb, 0xa6, 0x42, 0xcb, 0xe4, 0x13, 0x82, 0x7f, 0x56, 0xd4,
	0x8d, 0xc9, 0xb4, 0x24, 0x82, 0xe7, 0x22, 0xd3, 0x92, 0xe7, 0xaa, 0xee, 0x1c, 0x53, 0xb5, 0xc3,
	0x3b, 0x42, 0x78, 0x3a, 0xb3, 0x6f, 0x21, 0xec, 0x60, 0x1c, 0x7a, 0xc9, 0x17, 0xc4, 0x73, 0x32,
	0x9a, 0xa3, 0x58, 0x0d, 0xab, 0xf1, 0x20, 0x84, 0xc7, 0x9c, 0xf1, 0x4a, 0x19, 0x89, 0x1e, 0xbd,
	0x40, 0x98, 0x33, 0x5e, 0xaa, 0xbe, 0xb5, 0xa6, 0x57, 0xe8, 0x27, 0x7b, 0x88, 0xe6, 0x70, 0xba,
	0x9b, 0xba, 0x77, 0xc0, 0x09, 0xf0, 0x52, 0xed, 0xfe, 0xec, 0xa6, 0x31, 0xe8, 0xd1, 0x07, 0xbc,
	0xde, 0x68, 0xdf, 0x5e, 0xb0, 0x4f, 0x11, 0xd0, 0x42, 0xfe, 0x35, 0x6b, 0xfb, 0x73, 0x74, 0x78,
	0x4f, 0x31, 0xbc, 0x2d, 0xf5, 0xeb, 0xf0, 0x70, 0x0a, 0x00, 0x00, 0xff, 0xff, 0xfa, 0x9e, 0xc2,
	0x95, 0xfc, 0x00, 0x00, 0x00,
}
